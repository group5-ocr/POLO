{"doc_id":"source","schema_version":"0.1","ts":"2025-09-15T08:07:33Z","type":"xref_mention","label":"system","para_index":11,"sent_index":0,"cmd":"ref","text":"YOLO is refreshingly simple: see Figure \\ref{system}"}
{"doc_id":"source","schema_version":"0.1","ts":"2025-09-15T08:07:33Z","type":"xref_mention","label":"net","para_index":29,"sent_index":0,"cmd":"ref","text":"The full network is shown in Figure \\ref{net}"}
{"doc_id":"source","schema_version":"0.1","ts":"2025-09-15T08:07:33Z","type":"xref_mention","label":"net","para_index":33,"sent_index":0,"cmd":"ref","text":"For pretraining we use the first 20 convolutional layers from Figure \\ref{net} followed by a average-pooling layer and a fully connected layer"}
{"doc_id":"source","schema_version":"0.1","ts":"2025-09-15T08:07:33Z","type":"xref_mention","label":"errors","para_index":81,"sent_index":0,"cmd":"ref","text":"Figure \\ref{errors} shows the breakdown of each error type averaged across all 20 classes"}
{"doc_id":"source","schema_version":"0.1","ts":"2025-09-15T08:07:33Z","type":"xref_mention","label":"combine","para_index":88,"sent_index":0,"cmd":"ref","text":"Those ensembles produced small increases in mAP between .3 and .6\\%, see Table \\ref{combine} for details"}
{"doc_id":"source","schema_version":"0.1","ts":"2025-09-15T08:07:33Z","type":"xref_mention","label":"results","para_index":92,"sent_index":0,"cmd":"ref","text":"This is lower than the current state of the art, closer to the original R-CNN using VGG-16, see Table \\ref{results}"}
{"doc_id":"source","schema_version":"0.1","ts":"2025-09-15T08:07:33Z","type":"xref_mention","label":"timing","para_index":95,"sent_index":0,"cmd":"ref","text":"Table \\ref{timing} shows a full comparison between multiple R-CNN and Fast R-CNN variants and YOLO"}
{"doc_id":"source","schema_version":"0.1","ts":"2025-09-15T08:07:33Z","type":"xref_mention","label":"art","para_index":102,"sent_index":0,"cmd":"ref","text":"Figure \\ref{art} shows comparative performance between YOLO and other detection methods"}
