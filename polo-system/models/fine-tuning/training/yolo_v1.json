[
  {
    "id": "0.1.1",
    "section_major": 0,
    "section_minor": 1,
    "original": "We present YOLO, a new approach to object detection.",
    "simplified": "We present YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects), a new approach to object detection (finding what objects are in an image and drawing boxes around them)."
  },
  {
    "id": "0.1.2",
    "section_major": 0,
    "section_minor": 1,
    "original": "Prior work on object detection repurposes classifiers to perform detection.",
    "simplified": "Prior work on object detection (finding what objects are in an image and drawing boxes around them) repurposes classifiers to perform detection."
  },
  {
    "id": "0.1.3",
    "section_major": 0,
    "section_minor": 1,
    "original": "Instead, we frame object detection as a regression problem to spatially separated bounding boxes and associated class probabilities.",
    "simplified": "Instead, we frame object detection (finding what objects are in an image and drawing boxes around them) as a regression problem to spatially separated bounding box (a rectangle that marks an object's location) and associated class probabilities."
  },
  {
    "id": "0.1.4",
    "section_major": 0,
    "section_minor": 1,
    "original": "A single neural network predicts bounding boxes and class probabilities directly from full images in one evaluation.",
    "simplified": "A single neural network predicts bounding box (a rectangle that marks an object's location) and class probabilities directly from full images in one evaluation."
  },
  {
    "id": "0.1.5",
    "section_major": 0,
    "section_minor": 1,
    "original": "Since the whole detection pipeline is a single network, it can be optimized end-to-end directly on detection performance.",
    "simplified": "Since the whole detection pipeline is a single network, it can be optimized end-to-end directly on detection performance. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "0.1.6",
    "section_major": 0,
    "section_minor": 1,
    "original": "Our unified architecture is extremely fast.",
    "simplified": "Our unified architecture is extremely fast. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "0.1.7",
    "section_major": 0,
    "section_minor": 1,
    "original": "Our base YOLO model processes images in real-time at 45 frames per second.",
    "simplified": "Our base YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) model processes images in real-time at 45 frames per second."
  },
  {
    "id": "0.1.8",
    "section_major": 0,
    "section_minor": 1,
    "original": "A smaller version of the network, Fast YOLO, processes an astounding 155 frames per second while still achieving double the mAP of other real-time detectors.",
    "simplified": "A smaller version of the network, Fast YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects), processes an astounding 155 frames per second while still achieving double the mAP (mean average precision, a common accuracy score for detection, higher is better) of other real-time detectors."
  },
  {
    "id": "0.1.9",
    "section_major": 0,
    "section_minor": 1,
    "original": "Compared to state-of-the-art detection systems, YOLO makes more localization errors but is less likely to predict false positives on background.",
    "simplified": "Compared to state-of-the-art detection systems, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) makes more localization errors but is less likely to predict false positives on background."
  },
  {
    "id": "0.1.10",
    "section_major": 0,
    "section_minor": 1,
    "original": "Finally, YOLO learns very general representations of objects.",
    "simplified": "Finally, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) learns very general representations of objects."
  },
  {
    "id": "0.1.11",
    "section_major": 0,
    "section_minor": 1,
    "original": "It outperforms other detection methods, including DPM and R-CNN, when generalizing from natural images to other domains like artwork.",
    "simplified": "It outperforms other detection methods, including DPM and R-CNN (convolutional neural network, a deep learning model good at images), when generalizing from natural images to other domains like artwork."
  },
  {
    "id": "1.1.1",
    "section_major": 1,
    "section_minor": 1,
    "original": "Humans glance at an image and instantly know what objects are in the image, where they are, and how they interact.",
    "simplified": "Humans glance at an image and instantly know what objects are in the image, where they are, and how they interact. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.2",
    "section_major": 1,
    "section_minor": 1,
    "original": "The human visual system is fast and accurate, allowing us to perform complex tasks like driving with little conscious thought.",
    "simplified": "The human visual system is fast and accurate, allowing us to perform complex tasks like driving with little conscious thought. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.3",
    "section_major": 1,
    "section_minor": 1,
    "original": "Fast, accurate algorithms for object detection would allow computers to drive cars without specialized sensors, enable assistive devices to convey real-time scene information to human users, and unlock the potential for general purpose, responsive robotic systems.",
    "simplified": "Fast, accurate algorithms for object detection (finding what objects are in an image and drawing boxes around them) would allow computers to drive cars without specialized sensors, enable assistive devices to convey real-time scene information to human users, and unlock the potential for general purpose, responsive robotic systems."
  },
  {
    "id": "1.1.4",
    "section_major": 1,
    "section_minor": 1,
    "original": "Current detection systems repurpose classifiers to perform detection.",
    "simplified": "Current detection systems repurpose classifiers to perform detection. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.5",
    "section_major": 1,
    "section_minor": 1,
    "original": "To detect an object, these systems take a classifier for that object and evaluate it at various locations and scales in a test image.",
    "simplified": "To detect an object, these systems take a classifier for that object and evaluate it at various locations and scales in a test image. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.6",
    "section_major": 1,
    "section_minor": 1,
    "original": "Systems like deformable parts models (DPM) use a sliding window approach where the classifier is run at evenly spaced locations over the entire image [10].",
    "simplified": "Systems like deformable parts models (DPM) use a sliding window approach where the classifier is run at evenly spaced locations over the entire image [10]."
  },
  {
    "id": "1.1.7",
    "section_major": 1,
    "section_minor": 1,
    "original": "More recent approaches like R-CNN use region proposal 1.",
    "simplified": "More recent approaches like R-CNN (convolutional neural network, a deep learning model good at images) use region proposal 1. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.8",
    "section_major": 1,
    "section_minor": 1,
    "original": "Resize image. 2.",
    "simplified": "Resize image. 2. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.9",
    "section_major": 1,
    "section_minor": 1,
    "original": "Run convolutional network. 3.",
    "simplified": "Run convolutional network. 3. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.10",
    "section_major": 1,
    "section_minor": 1,
    "original": "Non-max suppression.",
    "simplified": "Non-max suppression. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.11",
    "section_major": 1,
    "section_minor": 1,
    "original": "Person: 0.64 Horse: 0.28 with YOLO is simple and straightforward.",
    "simplified": "Person: 0.64 Horse: 0.28 with YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is simple and straightforward."
  },
  {
    "id": "1.1.12",
    "section_major": 1,
    "section_minor": 1,
    "original": "Our system (1) resizes the input image to 448 × 448, (2) runs a single convolutional network on the image, and (3) thresholds the resulting detections by the model’s confidence. methods to first generate potential bounding boxes in an image and then run a classifier on these proposed boxes.",
    "simplified": "Our system (1) resizes the input image to 448 × 448, (2) runs a single convolutional network on the image, and (3) thresholds the resulting detections by the model’s confidence. methods to first generate potential bounding box (a rectangle that marks an object's location) in an image and then run a classifier on these proposed boxes."
  },
  {
    "id": "1.1.13",
    "section_major": 1,
    "section_minor": 1,
    "original": "After classification, post-processing is used to refine the bounding boxes, eliminate duplicate detections, and rescore the boxes based on other objects in the scene [13].",
    "simplified": "After classification, post-processing is used to refine the bounding box (a rectangle that marks an object's location), eliminate duplicate detections, and rescore the boxes based on other objects in the scene [13]."
  },
  {
    "id": "1.1.14",
    "section_major": 1,
    "section_minor": 1,
    "original": "These complex pipelines are slow and hard to optimize because each individual component must be trained separately.",
    "simplified": "These complex pipelines are slow and hard to optimize because each individual component must be trained separately. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.15",
    "section_major": 1,
    "section_minor": 1,
    "original": "We reframe object detection as a single regression problem, straight from image pixels to bounding box coordinates and class probabilities.",
    "simplified": "We reframe object detection (finding what objects are in an image and drawing boxes around them) as a single regression problem, straight from image pixels to bounding box (a rectangle that marks an object's location) coordinates and class probabilities."
  },
  {
    "id": "1.1.16",
    "section_major": 1,
    "section_minor": 1,
    "original": "Using our system, you only look once (YOLO) at an image to predict what objects are present and where they are.",
    "simplified": "Using our system, you only look once (YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects)) at an image to predict what objects are present and where they are."
  },
  {
    "id": "1.1.17",
    "section_major": 1,
    "section_minor": 1,
    "original": "YOLO is refreshingly simple: see Figure 1.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is refreshingly simple: see Figure 1. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.18",
    "section_major": 1,
    "section_minor": 1,
    "original": "A single convolutional network simultaneously predicts multiple bounding boxes and class probabilities for those boxes.",
    "simplified": "A single convolutional network simultaneously predicts multiple bounding box (a rectangle that marks an object's location) and class probabilities for those boxes."
  },
  {
    "id": "1.1.19",
    "section_major": 1,
    "section_minor": 1,
    "original": "YOLO trains on full images and directly optimizes detection performance.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) trains on full images and directly optimizes detection performance."
  },
  {
    "id": "1.1.20",
    "section_major": 1,
    "section_minor": 1,
    "original": "This unified model has several benefits over traditional methods of object detection.",
    "simplified": "This unified model has several benefits over traditional methods of object detection (finding what objects are in an image and drawing boxes around them)."
  },
  {
    "id": "1.1.21",
    "section_major": 1,
    "section_minor": 1,
    "original": "First, YOLO is extremely fast.",
    "simplified": "First, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is extremely fast. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.22",
    "section_major": 1,
    "section_minor": 1,
    "original": "Since we frame detection as a regression problem we don’t need a complex pipeline.",
    "simplified": "Since we frame detection as a regression problem we don’t need a complex pipeline. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.23",
    "section_major": 1,
    "section_minor": 1,
    "original": "We simply run our neural network on a new image at test time to predict detections.",
    "simplified": "We simply run our neural network on a new image at test time to predict detections. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.24",
    "section_major": 1,
    "section_minor": 1,
    "original": "Our base network runs at 45 frames per second with no batch processing on a Titan X GPU and a fast version runs at more than 150 fps.",
    "simplified": "Our base network runs at 45 frames per second with no batch processing on a Titan X GPU and a fast version runs at more than 150 fps. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.25",
    "section_major": 1,
    "section_minor": 1,
    "original": "This means we can process streaming video in real-time with less than 25 milliseconds of latency.",
    "simplified": "This means we can process streaming video in real-time with less than 25 milliseconds of latency. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.26",
    "section_major": 1,
    "section_minor": 1,
    "original": "Furthermore, YOLO achieves more than twice the mean average precision of other real-time systems.",
    "simplified": "Furthermore, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) achieves more than twice the mean average precision of other real-time systems."
  },
  {
    "id": "1.1.27",
    "section_major": 1,
    "section_minor": 1,
    "original": "For a demo of our system running in real-time on a webcam please see our project webpage: http://pjreddie.com/yolo/.",
    "simplified": "For a demo of our system running in real-time on a webcam please see our project webpage: http://pjreddie.com/YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects)/."
  },
  {
    "id": "1.1.28",
    "section_major": 1,
    "section_minor": 1,
    "original": "Second, YOLO reasons globally about the image when 1 arXiv:1506.02640v5 [cs.CV] 9 May 2016 making predictions.",
    "simplified": "Second, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) reasons globally about the image when 1 arXiv:1506.02640v5 [cs.CV] 9 May 2016 making predictions."
  },
  {
    "id": "1.1.29",
    "section_major": 1,
    "section_minor": 1,
    "original": "Unlike sliding window and region proposal-based techniques, YOLO sees the entire image during training and test time so it implicitly encodes contextual information about classes as well as their appearance.",
    "simplified": "Unlike sliding window and region proposal-based techniques, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) sees the entire image during training and test time so it implicitly encodes contextual information about classes as well as their appearance."
  },
  {
    "id": "1.1.30",
    "section_major": 1,
    "section_minor": 1,
    "original": "Fast R-CNN, a top detection method [14], mistakes background patches in an image for objects because it can’t see the larger context.",
    "simplified": "Fast R-CNN (convolutional neural network, a deep learning model good at images), a top detection method [14], mistakes background patches in an image for objects because it can’t see the larger context."
  },
  {
    "id": "1.1.31",
    "section_major": 1,
    "section_minor": 1,
    "original": "YOLO makes less than half the number of background errors compared to Fast R-CNN.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) makes less than half the number of background errors compared to Fast R-CNN (convolutional neural network, a deep learning model good at images)."
  },
  {
    "id": "1.1.32",
    "section_major": 1,
    "section_minor": 1,
    "original": "Third, YOLO learns generalizable representations of objects.",
    "simplified": "Third, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) learns generalizable representations of objects."
  },
  {
    "id": "1.1.33",
    "section_major": 1,
    "section_minor": 1,
    "original": "When trained on natural images and tested on artwork, YOLO outperforms top detection methods like DPM and R-CNN by a wide margin.",
    "simplified": "When trained on natural images and tested on artwork, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) outperforms top detection methods like DPM and R-CNN (convolutional neural network, a deep learning model good at images) by a wide margin."
  },
  {
    "id": "1.1.34",
    "section_major": 1,
    "section_minor": 1,
    "original": "Since YOLO is highly generalizable it is less likely to break down when applied to new domains or unexpected inputs.",
    "simplified": "Since YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is highly generalizable it is less likely to break down when applied to new domains or unexpected inputs."
  },
  {
    "id": "1.1.35",
    "section_major": 1,
    "section_minor": 1,
    "original": "YOLO still lags behind state-of-the-art detection systems in accuracy.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) still lags behind state-of-the-art detection systems in accuracy."
  },
  {
    "id": "1.1.36",
    "section_major": 1,
    "section_minor": 1,
    "original": "While it can quickly identify objects in images it struggles to precisely localize some objects, especially small ones.",
    "simplified": "While it can quickly identify objects in images it struggles to precisely localize some objects, especially small ones. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.37",
    "section_major": 1,
    "section_minor": 1,
    "original": "We examine these tradeoffs further in our experiments.",
    "simplified": "We examine these tradeoffs further in our experiments. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.38",
    "section_major": 1,
    "section_minor": 1,
    "original": "All of our training and testing code is open source.",
    "simplified": "All of our training and testing code is open source. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "1.1.39",
    "section_major": 1,
    "section_minor": 1,
    "original": "A variety of pretrained models are also available to download.",
    "simplified": "A variety of pretrained models are also available to download. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.1",
    "section_major": 2,
    "section_minor": 1,
    "original": "We unify the separate components of object detection into a single neural network.",
    "simplified": "We unify the separate components of object detection (finding what objects are in an image and drawing boxes around them) into a single neural network."
  },
  {
    "id": "2.1.2",
    "section_major": 2,
    "section_minor": 1,
    "original": "Our network uses features from the entire image to predict each bounding box.",
    "simplified": "Our network uses features from the entire image to predict each bounding box (a rectangle that marks an object's location). In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.3",
    "section_major": 2,
    "section_minor": 1,
    "original": "It also predicts all bounding boxes across all classes for an image simultaneously.",
    "simplified": "It also predicts all bounding box (a rectangle that marks an object's location) across all classes for an image simultaneously. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.4",
    "section_major": 2,
    "section_minor": 1,
    "original": "This means our network reasons globally about the full image and all the objects in the image.",
    "simplified": "This means our network reasons globally about the full image and all the objects in the image. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.5",
    "section_major": 2,
    "section_minor": 1,
    "original": "The YOLO design enables end-to-end training and realtime speeds while maintaining high average precision.",
    "simplified": "The YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) design enables end-to-end training and realtime speeds while maintaining high average precision."
  },
  {
    "id": "2.1.6",
    "section_major": 2,
    "section_minor": 1,
    "original": "Our system divides the input image into an S × S grid.",
    "simplified": "Our system divides the input image into an S × S grid. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.7",
    "section_major": 2,
    "section_minor": 1,
    "original": "If the center of an object falls into a grid cell, that grid cell is responsible for detecting that object.",
    "simplified": "If the center of an object falls into a grid cell, that grid cell is responsible for detecting that object. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.8",
    "section_major": 2,
    "section_minor": 1,
    "original": "Each grid cell predicts B bounding boxes and confidence scores for those boxes.",
    "simplified": "Each grid cell predicts B bounding box (a rectangle that marks an object's location) and confidence scores for those boxes. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.9",
    "section_major": 2,
    "section_minor": 1,
    "original": "These confidence scores reflect how confident the model is that the box contains an object and also how accurate it thinks the box is that it predicts.",
    "simplified": "These confidence scores reflect how confident the model is that the box contains an object and also how accurate it thinks the box is that it predicts."
  },
  {
    "id": "2.1.10",
    "section_major": 2,
    "section_minor": 1,
    "original": "Formally we define confidence as Pr(Object) ∗ IOUtruth pred .",
    "simplified": "Formally we define confidence as Pr(Object) ∗ IOUtruth pred . In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.11",
    "section_major": 2,
    "section_minor": 1,
    "original": "If no object exists in that cell, the confidence scores should be zero.",
    "simplified": "If no object exists in that cell, the confidence scores should be zero. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.12",
    "section_major": 2,
    "section_minor": 1,
    "original": "Otherwise we want the confidence score to equal the intersection over union (IOU) between the predicted box and the ground truth.",
    "simplified": "Otherwise we want the confidence score to equal the intersection over union (IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap)) between the predicted box and the ground truth."
  },
  {
    "id": "2.1.13",
    "section_major": 2,
    "section_minor": 1,
    "original": "Each bounding box consists of 5 predictions: x, y, w, h, and confidence.",
    "simplified": "Each bounding box (a rectangle that marks an object's location) consists of 5 predictions: x, y, w, h, and confidence. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.14",
    "section_major": 2,
    "section_minor": 1,
    "original": "The (x, y) coordinates represent the center of the box relative to the bounds of the grid cell.",
    "simplified": "The (x, y) coordinates represent the center of the box relative to the bounds of the grid cell. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.15",
    "section_major": 2,
    "section_minor": 1,
    "original": "The width and height are predicted relative to the whole image.",
    "simplified": "The width and height are predicted relative to the whole image. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.16",
    "section_major": 2,
    "section_minor": 1,
    "original": "Finally the confidence prediction represents the IOU between the predicted box and any ground truth box.",
    "simplified": "Finally the confidence prediction represents the IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap) between the predicted box and any ground truth box."
  },
  {
    "id": "2.1.17",
    "section_major": 2,
    "section_minor": 1,
    "original": "Each grid cell also predicts C conditional class probabilities, Pr(Classi |Object).",
    "simplified": "Each grid cell also predicts C conditional class probabilities, Pr(Classi |Object). In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.18",
    "section_major": 2,
    "section_minor": 1,
    "original": "These probabilities are conditioned on the grid cell containing an object.",
    "simplified": "These probabilities are conditioned on the grid cell containing an object. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.19",
    "section_major": 2,
    "section_minor": 1,
    "original": "We only predict one set of class probabilities per grid cell, regardless of the number of boxes B.",
    "simplified": "We only predict one set of class probabilities per grid cell, regardless of the number of boxes B. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.20",
    "section_major": 2,
    "section_minor": 1,
    "original": "At test time we multiply the conditional class probabilities and the individual box confidence predictions, Pr(Classi|Object) ∗ Pr(Object) ∗ IOUtruth pred = Pr(Classi) ∗ IOUtruth which gives us class-specific confidence scores for each box.",
    "simplified": "At test time we multiply the conditional class probabilities and the individual box confidence predictions, Pr(Classi|Object) ∗ Pr(Object) ∗ IOUtruth pred = Pr(Classi) ∗ IOUtruth which gives us class-specific confidence scores for each box."
  },
  {
    "id": "2.1.21",
    "section_major": 2,
    "section_minor": 1,
    "original": "These scores encode both the probability of that class appearing in the box and how well the predicted box fits the object.",
    "simplified": "These scores encode both the probability of that class appearing in the box and how well the predicted box fits the object. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.22",
    "section_major": 2,
    "section_minor": 1,
    "original": "S × S grid on input Bounding boxes + confdence Class probability map Final detections grid cell predicts B bounding boxes, confidence for those boxes, and C class probabilities.",
    "simplified": "S × S grid on input bounding box (a rectangle that marks an object's location) + confdence Class probability mAP (mean average precision, a common accuracy score for detection, higher is better) Final detections grid cell predicts B bounding box (a rectangle that marks an object's location), confidence for those boxes, and C class probabilities."
  },
  {
    "id": "2.1.23",
    "section_major": 2,
    "section_minor": 1,
    "original": "These predictions are encoded as an S × S × (B ∗ 5 + C) tensor.",
    "simplified": "These predictions are encoded as an S × S × (B ∗ 5 + C) tensor. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.24",
    "section_major": 2,
    "section_minor": 1,
    "original": "For evaluating YOLO on PASCAL VOC, we use S = 7, B = 2.",
    "simplified": "For evaluating YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) on PASCAL VOC, we use S = 7, B = 2."
  },
  {
    "id": "2.1.25",
    "section_major": 2,
    "section_minor": 1,
    "original": "PASCAL VOC has 20 labelled classes so C = 20.",
    "simplified": "PASCAL VOC has 20 labelled classes so C = 20. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.1.26",
    "section_major": 2,
    "section_minor": 1,
    "original": "Our final prediction is a 7 × 7 × 30 tensor.",
    "simplified": "Our final prediction is a 7 × 7 × 30 tensor. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.1",
    "section_major": 2,
    "section_minor": 2,
    "original": "We implement this model as a convolutional neural network and evaluate it on the PASCAL VOC detection dataset [9].",
    "simplified": "We implement this model as a convolutional neural network and evaluate it on the PASCAL VOC detection dataset [9]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.2",
    "section_major": 2,
    "section_minor": 2,
    "original": "The initial convolutional layers of the network extract features from the image while the fully connected layers predict the output probabilities and coordinates.",
    "simplified": "The initial convolutional layers of the network extract features from the image while the fully connected layers predict the output probabilities and coordinates."
  },
  {
    "id": "2.2.3",
    "section_major": 2,
    "section_minor": 2,
    "original": "Our network architecture is inspired by the GoogLeNet model for image classification [34].",
    "simplified": "Our network architecture is inspired by the GoogLeNet model for image classification [34]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.4",
    "section_major": 2,
    "section_minor": 2,
    "original": "Our network has 24 convolutional layers followed by 2 fully connected layers.",
    "simplified": "Our network has 24 convolutional layers followed by 2 fully connected layers. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.5",
    "section_major": 2,
    "section_minor": 2,
    "original": "Instead of the inception modules used by GoogLeNet, we simply use 1 × 1 reduction layers followed by 3 × 3 convolutional layers, similar to Lin et al [22].",
    "simplified": "Instead of the inception modules used by GoogLeNet, we simply use 1 × 1 reduction layers followed by 3 × 3 convolutional layers, similar to Lin et al [22]."
  },
  {
    "id": "2.2.6",
    "section_major": 2,
    "section_minor": 2,
    "original": "The full network is shown in Figure 3.",
    "simplified": "The full network is shown in Figure 3. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.7",
    "section_major": 2,
    "section_minor": 2,
    "original": "We also train a fast version of YOLO designed to push the boundaries of fast object detection.",
    "simplified": "We also train a fast version of YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) designed to push the boundaries of fast object detection (finding what objects are in an image and drawing boxes around them)."
  },
  {
    "id": "2.2.8",
    "section_major": 2,
    "section_minor": 2,
    "original": "Fast YOLO uses a neural network with fewer convolutional layers (9 instead of 24) and fewer filters in those layers.",
    "simplified": "Fast YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) uses a neural network with fewer convolutional layers (9 instead of 24) and fewer filters in those layers."
  },
  {
    "id": "2.2.9",
    "section_major": 2,
    "section_minor": 2,
    "original": "Other than the size of the network, all training and testing parameters are the same between YOLO and Fast YOLO. 3 7 7 Conv.",
    "simplified": "Other than the size of the network, all training and testing parameters are the same between YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) and Fast YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects). 3 7 7 Conv."
  },
  {
    "id": "2.2.10",
    "section_major": 2,
    "section_minor": 2,
    "original": "Layer Maxpool Layer 3 3 3 3 Conn.",
    "simplified": "Layer Maxpool Layer 3 3 3 3 Conn. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.11",
    "section_major": 2,
    "section_minor": 2,
    "original": "Layer Conv.",
    "simplified": "Layer Conv. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.12",
    "section_major": 2,
    "section_minor": 2,
    "original": "Layer Conn.",
    "simplified": "Layer Conn. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.13",
    "section_major": 2,
    "section_minor": 2,
    "original": "Layer Maxpool Layer Conv.",
    "simplified": "Layer Maxpool Layer Conv. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.14",
    "section_major": 2,
    "section_minor": 2,
    "original": "Layers Maxpool Layer 3 3 Conv.",
    "simplified": "Layers Maxpool Layer 3 3 Conv. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.15",
    "section_major": 2,
    "section_minor": 2,
    "original": "Layers Maxpool Layer 3 3 Conv.",
    "simplified": "Layers Maxpool Layer 3 3 Conv. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.16",
    "section_major": 2,
    "section_minor": 2,
    "original": "Layers 3 3 7 7 7 7 7 7 Conv.",
    "simplified": "Layers 3 3 7 7 7 7 7 7 Conv. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.17",
    "section_major": 2,
    "section_minor": 2,
    "original": "Layers convolutional layers reduce the features space from preceding layers.",
    "simplified": "Layers convolutional layers reduce the features space from preceding layers. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.2.18",
    "section_major": 2,
    "section_minor": 2,
    "original": "We pretrain the convolutional layers on the ImageNet classification task at half the resolution (224 × 224 input image) and then double the resolution for detection.",
    "simplified": "We pretrain the convolutional layers on the ImageNet classification task at half the resolution (224 × 224 input image) and then double the resolution for detection."
  },
  {
    "id": "2.2.19",
    "section_major": 2,
    "section_minor": 2,
    "original": "The final output of our network is the 7 × 7 × 30 tensor of predictions.",
    "simplified": "The final output of our network is the 7 × 7 × 30 tensor of predictions. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.1",
    "section_major": 2,
    "section_minor": 3,
    "original": "We pretrain our convolutional layers on the ImageNet 1000-class competition dataset [30].",
    "simplified": "We pretrain our convolutional layers on the ImageNet 1000-class competition dataset [30]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.2",
    "section_major": 2,
    "section_minor": 3,
    "original": "For pretraining we use the first 20 convolutional layers from Figure 3 followed by a average-pooling layer and a fully connected layer.",
    "simplified": "For pretraining we use the first 20 convolutional layers from Figure 3 followed by a average-pooling layer and a fully connected layer. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.3",
    "section_major": 2,
    "section_minor": 3,
    "original": "We train this network for approximately a week and achieve a single crop top-5 accuracy of 88% on the ImageNet 2012 validation set, comparable to the GoogLeNet models in Caffe’s Model Zoo [24].",
    "simplified": "We train this network for approximately a week and achieve a single crop top-5 accuracy of 88% on the ImageNet 2012 validation set, comparable to the GoogLeNet models in Caffe’s Model Zoo [24]."
  },
  {
    "id": "2.3.4",
    "section_major": 2,
    "section_minor": 3,
    "original": "We use the Darknet framework for all training and inference [26].",
    "simplified": "We use the Darknet framework for all training and inference [26]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.5",
    "section_major": 2,
    "section_minor": 3,
    "original": "We then convert the model to perform detection.",
    "simplified": "We then convert the model to perform detection. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.6",
    "section_major": 2,
    "section_minor": 3,
    "original": "Ren et al. show that adding both convolutional and connected layers to pretrained networks can improve performance [29].",
    "simplified": "Ren et al. show that adding both convolutional and connected layers to pretrained networks can improve performance [29]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.7",
    "section_major": 2,
    "section_minor": 3,
    "original": "Following their example, we add four convolutional layers and two fully connected layers with randomly initialized weights.",
    "simplified": "Following their example, we add four convolutional layers and two fully connected layers with randomly initialized weights. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.8",
    "section_major": 2,
    "section_minor": 3,
    "original": "Detection often requires fine-grained visual information so we increase the input resolution of the network Our final layer predicts both class probabilities and bounding box coordinates.",
    "simplified": "Detection often requires fine-grained visual information so we increase the input resolution of the network Our final layer predicts both class probabilities and bounding box (a rectangle that marks an object's location) coordinates."
  },
  {
    "id": "2.3.9",
    "section_major": 2,
    "section_minor": 3,
    "original": "We normalize the bounding box width and height by the image width and height so that they fall between 0 and 1.",
    "simplified": "We normalize the bounding box (a rectangle that marks an object's location) width and height by the image width and height so that they fall between 0 and 1."
  },
  {
    "id": "2.3.10",
    "section_major": 2,
    "section_minor": 3,
    "original": "We parametrize the bounding box x and y coordinates to be offsets of a particular grid cell location so they are also bounded between 0 and 1.",
    "simplified": "We parametrize the bounding box (a rectangle that marks an object's location) x and y coordinates to be offsets of a particular grid cell location so they are also bounded between 0 and 1."
  },
  {
    "id": "2.3.11",
    "section_major": 2,
    "section_minor": 3,
    "original": "We use a linear activation function for the final layer and all other layers use the following leaky rectified linear activation: x, if x > 0 0.1x, otherwise We optimize for sum-squared error in the output of our model.",
    "simplified": "We use a linear activation function for the final layer and all other layers use the following leaky rectified linear activation: x, if x > 0 0.1x, otherwise We optimize for sum-squared error in the output of our model."
  },
  {
    "id": "2.3.12",
    "section_major": 2,
    "section_minor": 3,
    "original": "We use sum-squared error because it is easy to optimize, however it does not perfectly align with our goal of maximizing average precision.",
    "simplified": "We use sum-squared error because it is easy to optimize, however it does not perfectly align with our goal of maximizing average precision. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.13",
    "section_major": 2,
    "section_minor": 3,
    "original": "It weights localization error equally with classification error which may not be ideal.",
    "simplified": "It weights localization error equally with classification error which may not be ideal. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.14",
    "section_major": 2,
    "section_minor": 3,
    "original": "Also, in every image many grid cells do not contain any object.",
    "simplified": "Also, in every image many grid cells do not contain any object. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.15",
    "section_major": 2,
    "section_minor": 3,
    "original": "This pushes the “confidence” scores of those cells towards zero, often overpowering the gradient from cells that do contain objects.",
    "simplified": "This pushes the “confidence” scores of those cells towards zero, often overpowering the gradient from cells that do contain objects. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.16",
    "section_major": 2,
    "section_minor": 3,
    "original": "This can lead to model instability, causing training to diverge early on.",
    "simplified": "This can lead to model instability, causing training to diverge early on. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.17",
    "section_major": 2,
    "section_minor": 3,
    "original": "To remedy this, we increase the loss from bounding box coordinate predictions and decrease the loss from confidence predictions for boxes that don’t contain objects.",
    "simplified": "To remedy this, we increase the loss from bounding box (a rectangle that marks an object's location) coordinate predictions and decrease the loss from confidence predictions for boxes that don’t contain objects."
  },
  {
    "id": "2.3.18",
    "section_major": 2,
    "section_minor": 3,
    "original": "We use two parameters, λcoord and λnoobj to accomplish this.",
    "simplified": "We use two parameters, λcoord and λnoobj to accomplish this. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.19",
    "section_major": 2,
    "section_minor": 3,
    "original": "We set λcoord = 5 and λnoobj = .5.",
    "simplified": "We set λcoord = 5 and λnoobj = .5. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.20",
    "section_major": 2,
    "section_minor": 3,
    "original": "Sum-squared error also equally weights errors in large boxes and small boxes.",
    "simplified": "Sum-squared error also equally weights errors in large boxes and small boxes. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.21",
    "section_major": 2,
    "section_minor": 3,
    "original": "Our error metric should reflect that small deviations in large boxes matter less than in small boxes.",
    "simplified": "Our error metric should reflect that small deviations in large boxes matter less than in small boxes. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.22",
    "section_major": 2,
    "section_minor": 3,
    "original": "To partially address this we predict the square root of the bounding box width and height instead of the width and height directly.",
    "simplified": "To partially address this we predict the square root of the bounding box (a rectangle that marks an object's location) width and height instead of the width and height directly."
  },
  {
    "id": "2.3.23",
    "section_major": 2,
    "section_minor": 3,
    "original": "YOLO predicts multiple bounding boxes per grid cell.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) predicts multiple bounding box (a rectangle that marks an object's location) per grid cell."
  },
  {
    "id": "2.3.24",
    "section_major": 2,
    "section_minor": 3,
    "original": "At training time we only want one bounding box predictor to be responsible for each object.",
    "simplified": "At training time we only want one bounding box (a rectangle that marks an object's location) predictor to be responsible for each object. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.25",
    "section_major": 2,
    "section_minor": 3,
    "original": "We assign one predictor to be “responsible” for predicting an object based on which prediction has the highest current IOU with the ground truth.",
    "simplified": "We assign one predictor to be “responsible” for predicting an object based on which prediction has the highest current IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap) with the ground truth."
  },
  {
    "id": "2.3.26",
    "section_major": 2,
    "section_minor": 3,
    "original": "This leads to specialization between the bounding box predictors.",
    "simplified": "This leads to specialization between the bounding box (a rectangle that marks an object's location) predictors. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.27",
    "section_major": 2,
    "section_minor": 3,
    "original": "Each predictor gets better at predicting certain sizes, aspect ratios, or classes of object, improving overall recall.",
    "simplified": "Each predictor gets better at predicting certain sizes, aspect ratios, or classes of object, improving overall recall. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.28",
    "section_major": 2,
    "section_minor": 3,
    "original": "During training we optimize the following, multi-part loss function: λcoordXS2 XB 1 obj ij h 2 i + λcoordXS2 XB 1 obj ij \u0014\u0010√wi − p wˆi \u00112 + \u0012p hi − q hˆi \u00132\u0015 + XS2 XB 1 obj ij \u0010 Ci − Cˆi \u00112 + λnoobjXS2 XB 1 noobj ij \u0010 Ci − Cˆi \u00112 + XS2 1 obj i X c∈classes (pi(c) − pˆi(c))2 where 1 obj i denotes if object appears in cell i and 1 obj ij denotes that the jth bounding box predictor in cell i is “responsible” for that prediction.",
    "simplified": "During training we optimize the following, multi-part loss function: λcoordXS2 XB 1 obj ij h 2 i + λcoordXS2 XB 1 obj ij \u0014\u0010√wi − p wˆi \u00112 + \u0012p hi − q hˆi \u00132\u0015 + XS2 XB 1 obj ij \u0010 Ci − Cˆi \u00112 + λnoobjXS2 XB 1 noobj ij \u0010 Ci − Cˆi \u00112 + XS2 1 obj i X c∈classes (pi(c) − pˆi(c))2 where 1 obj i denotes if object appears in cell i and 1 obj ij denotes that the jth bounding box (a rectangle that marks an object's location) predictor in cell i is “responsible” for that prediction."
  },
  {
    "id": "2.3.29",
    "section_major": 2,
    "section_minor": 3,
    "original": "Note that the loss function only penalizes classification error if an object is present in that grid cell (hence the conditional class probability discussed earlier).",
    "simplified": "Note that the loss function only penalizes classification error if an object is present in that grid cell (hence the conditional class probability discussed earlier)."
  },
  {
    "id": "2.3.30",
    "section_major": 2,
    "section_minor": 3,
    "original": "It also only penalizes bounding box coordinate error if that predictor is “responsible” for the ground truth box (i.e. has the highest IOU of any predictor in that grid cell).",
    "simplified": "It also only penalizes bounding box (a rectangle that marks an object's location) coordinate error if that predictor is “responsible” for the ground truth box (i.e. has the highest IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap) of any predictor in that grid cell)."
  },
  {
    "id": "2.3.31",
    "section_major": 2,
    "section_minor": 3,
    "original": "We train the network for about 135 epochs on the training and validation data sets from PASCAL VOC 2007 and 2012.",
    "simplified": "We train the network for about 135 epochs on the training and validation data sets from PASCAL VOC 2007 and 2012. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.32",
    "section_major": 2,
    "section_minor": 3,
    "original": "When testing on 2012 we also include the VOC 2007 test data for training.",
    "simplified": "When testing on 2012 we also include the VOC 2007 test data for training. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.33",
    "section_major": 2,
    "section_minor": 3,
    "original": "Throughout training we use a batch size of 64, a momentum of 0.9 and a decay of 0.0005.",
    "simplified": "Throughout training we use a batch size of 64, a momentum of 0.9 and a decay of 0.0005. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.34",
    "section_major": 2,
    "section_minor": 3,
    "original": "Our learning rate schedule is as follows: For the first epochs we slowly raise the learning rate from 10−3 .",
    "simplified": "Our learning rate schedule is as follows: For the first epochs we slowly raise the learning rate from 10−3 . In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.35",
    "section_major": 2,
    "section_minor": 3,
    "original": "If we start at a high learning rate our model often diverges due to unstable gradients.",
    "simplified": "If we start at a high learning rate our model often diverges due to unstable gradients. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.36",
    "section_major": 2,
    "section_minor": 3,
    "original": "We continue training with 10−2 for 75 epochs, then 10−3 for 30 epochs, and finally 10−4 for 30 epochs.",
    "simplified": "We continue training with 10−2 for 75 epochs, then 10−3 for 30 epochs, and finally 10−4 for 30 epochs. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.37",
    "section_major": 2,
    "section_minor": 3,
    "original": "To avoid overfitting we use dropout and extensive data augmentation.",
    "simplified": "To avoid overfitting we use dropout and extensive data augmentation. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.38",
    "section_major": 2,
    "section_minor": 3,
    "original": "A dropout layer with rate = .5 after the first connected layer prevents co-adaptation between layers [18].",
    "simplified": "A dropout layer with rate = .5 after the first connected layer prevents co-adaptation between layers [18]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.39",
    "section_major": 2,
    "section_minor": 3,
    "original": "For data augmentation we introduce random scaling and translations of up to 20% of the original image size.",
    "simplified": "For data augmentation we introduce random scaling and translations of up to 20% of the original image size. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.3.40",
    "section_major": 2,
    "section_minor": 3,
    "original": "We also randomly adjust the exposure and saturation of the image by up to a factor of 1.5 in the HSV color space.",
    "simplified": "We also randomly adjust the exposure and saturation of the image by up to a factor of 1.5 in the HSV color space. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.4.1",
    "section_major": 2,
    "section_minor": 4,
    "original": "Just like in training, predicting detections for a test image only requires one network evaluation.",
    "simplified": "Just like in training, predicting detections for a test image only requires one network evaluation. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.4.2",
    "section_major": 2,
    "section_minor": 4,
    "original": "On PASCAL VOC the network predicts 98 bounding boxes per image and class probabilities for each box.",
    "simplified": "On PASCAL VOC the network predicts 98 bounding box (a rectangle that marks an object's location) per image and class probabilities for each box."
  },
  {
    "id": "2.4.3",
    "section_major": 2,
    "section_minor": 4,
    "original": "YOLO is extremely fast at test time since it only requires a single network evaluation, unlike classifier-based methods.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is extremely fast at test time since it only requires a single network evaluation, unlike classifier-based methods."
  },
  {
    "id": "2.4.4",
    "section_major": 2,
    "section_minor": 4,
    "original": "The grid design enforces spatial diversity in the bounding box predictions.",
    "simplified": "The grid design enforces spatial diversity in the bounding box (a rectangle that marks an object's location) predictions. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.4.5",
    "section_major": 2,
    "section_minor": 4,
    "original": "Often it is clear which grid cell an object falls in to and the network only predicts one box for each object.",
    "simplified": "Often it is clear which grid cell an object falls in to and the network only predicts one box for each object. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.4.6",
    "section_major": 2,
    "section_minor": 4,
    "original": "However, some large objects or objects near the border of multiple cells can be well localized by multiple cells.",
    "simplified": "However, some large objects or objects near the border of multiple cells can be well localized by multiple cells. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.4.7",
    "section_major": 2,
    "section_minor": 4,
    "original": "Non-maximal suppression can be used to fix these multiple detections.",
    "simplified": "Non-maximal suppression can be used to fix these multiple detections. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.4.8",
    "section_major": 2,
    "section_minor": 4,
    "original": "While not critical to performance as it is for R-CNN or DPM, non-maximal suppression adds 2- 3% in mAP.",
    "simplified": "While not critical to performance as it is for R-CNN (convolutional neural network, a deep learning model good at images) or DPM, non-maximal suppression adds 2- 3% in mAP (mean average precision, a common accuracy score for detection, higher is better)."
  },
  {
    "id": "2.5.1",
    "section_major": 2,
    "section_minor": 5,
    "original": "YOLO imposes strong spatial constraints on bounding box predictions since each grid cell only predicts two boxes and can only have one class.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) imposes strong spatial constraints on bounding box (a rectangle that marks an object's location) predictions since each grid cell only predicts two boxes and can only have one class."
  },
  {
    "id": "2.5.2",
    "section_major": 2,
    "section_minor": 5,
    "original": "This spatial constraint limits the number of nearby objects that our model can predict.",
    "simplified": "This spatial constraint limits the number of nearby objects that our model can predict. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.5.3",
    "section_major": 2,
    "section_minor": 5,
    "original": "Our model struggles with small objects that appear in groups, such as flocks of birds.",
    "simplified": "Our model struggles with small objects that appear in groups, such as flocks of birds. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "2.5.4",
    "section_major": 2,
    "section_minor": 5,
    "original": "Since our model learns to predict bounding boxes from data, it struggles to generalize to objects in new or unusual aspect ratios or configurations.",
    "simplified": "Since our model learns to predict bounding box (a rectangle that marks an object's location) from data, it struggles to generalize to objects in new or unusual aspect ratios or configurations."
  },
  {
    "id": "2.5.5",
    "section_major": 2,
    "section_minor": 5,
    "original": "Our model also uses relatively coarse features for predicting bounding boxes since our architecture has multiple downsampling layers from the input image.",
    "simplified": "Our model also uses relatively coarse features for predicting bounding box (a rectangle that marks an object's location) since our architecture has multiple downsampling layers from the input image."
  },
  {
    "id": "2.5.6",
    "section_major": 2,
    "section_minor": 5,
    "original": "Finally, while we train on a loss function that approximates detection performance, our loss function treats errors the same in small bounding boxes versus large bounding boxes.",
    "simplified": "Finally, while we train on a loss function that approximates detection performance, our loss function treats errors the same in small bounding box (a rectangle that marks an object's location) versus large bounding box (a rectangle that marks an object's location)."
  },
  {
    "id": "2.5.7",
    "section_major": 2,
    "section_minor": 5,
    "original": "A small error in a large box is generally benign but a small error in a small box has a much greater effect on IOU.",
    "simplified": "A small error in a large box is generally benign but a small error in a small box has a much greater effect on IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap)."
  },
  {
    "id": "2.5.8",
    "section_major": 2,
    "section_minor": 5,
    "original": "Our main source of error is incorrect localizations.",
    "simplified": "Our main source of error is incorrect localizations. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.1",
    "section_major": 3,
    "section_minor": 1,
    "original": "Object detection is a core problem in computer vision.",
    "simplified": "object detection (finding what objects are in an image and drawing boxes around them) is a core problem in computer vision. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.2",
    "section_major": 3,
    "section_minor": 1,
    "original": "Detection pipelines generally start by extracting a set of robust features from input images (Haar [25], SIFT [23], HOG [4], convolutional features [6]).",
    "simplified": "Detection pipelines generally start by extracting a set of robust features from input images (Haar [25], SIFT [23], HOG [4], convolutional features [6])."
  },
  {
    "id": "3.1.3",
    "section_major": 3,
    "section_minor": 1,
    "original": "Then, classifiers [36, 21, 13, 10] or localizers [1, 32] are used to identify objects in the feature space.",
    "simplified": "Then, classifiers [36, 21, 13, 10] or localizers [1, 32] are used to identify objects in the feature space. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.4",
    "section_major": 3,
    "section_minor": 1,
    "original": "These classifiers or localizers are run either in sliding window fashion over the whole image or on some subset of regions in the image [35, 15, 39].",
    "simplified": "These classifiers or localizers are run either in sliding window fashion over the whole image or on some subset of regions in the image [35, 15, 39]."
  },
  {
    "id": "3.1.5",
    "section_major": 3,
    "section_minor": 1,
    "original": "We compare the YOLO detection system to several top detection frameworks, highlighting key similarities and differences.",
    "simplified": "We compare the YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) detection system to several top detection frameworks, highlighting key similarities and differences."
  },
  {
    "id": "3.1.6",
    "section_major": 3,
    "section_minor": 1,
    "original": "Deformable parts models.",
    "simplified": "Deformable parts models. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.7",
    "section_major": 3,
    "section_minor": 1,
    "original": "Deformable parts models (DPM) use a sliding window approach to object detection [10].",
    "simplified": "Deformable parts models (DPM) use a sliding window approach to object detection (finding what objects are in an image and drawing boxes around them) [10]."
  },
  {
    "id": "3.1.8",
    "section_major": 3,
    "section_minor": 1,
    "original": "DPM uses a disjoint pipeline to extract static features, classify regions, predict bounding boxes for high scoring regions, etc.",
    "simplified": "DPM uses a disjoint pipeline to extract static features, classify regions, predict bounding box (a rectangle that marks an object's location) for high scoring regions, etc."
  },
  {
    "id": "3.1.9",
    "section_major": 3,
    "section_minor": 1,
    "original": "Our system replaces all of these disparate parts with a single convolutional neural network.",
    "simplified": "Our system replaces all of these disparate parts with a single convolutional neural network. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.10",
    "section_major": 3,
    "section_minor": 1,
    "original": "The network performs feature extraction, bounding box prediction, nonmaximal suppression, and contextual reasoning all concurrently.",
    "simplified": "The network performs feature extraction, bounding box (a rectangle that marks an object's location) prediction, nonmaximal suppression, and contextual reasoning all concurrently."
  },
  {
    "id": "3.1.11",
    "section_major": 3,
    "section_minor": 1,
    "original": "Instead of static features, the network trains the features in-line and optimizes them for the detection task.",
    "simplified": "Instead of static features, the network trains the features in-line and optimizes them for the detection task. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.12",
    "section_major": 3,
    "section_minor": 1,
    "original": "Our unified architecture leads to a faster, more accurate model than DPM.",
    "simplified": "Our unified architecture leads to a faster, more accurate model than DPM. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.13",
    "section_major": 3,
    "section_minor": 1,
    "original": "R-CNN.",
    "simplified": "R-CNN (convolutional neural network, a deep learning model good at images). In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.14",
    "section_major": 3,
    "section_minor": 1,
    "original": "R-CNN and its variants use region proposals instead of sliding windows to find objects in images.",
    "simplified": "R-CNN (convolutional neural network, a deep learning model good at images) and its variants use region proposals instead of sliding windows to find objects in images."
  },
  {
    "id": "3.1.15",
    "section_major": 3,
    "section_minor": 1,
    "original": "Selective Search [35] generates potential bounding boxes, a convolutional network extracts features, an SVM scores the boxes, a linear model adjusts the bounding boxes, and non-max suppression eliminates duplicate detections.",
    "simplified": "Selective Search [35] generates potential bounding box (a rectangle that marks an object's location), a convolutional network extracts features, an SVM scores the boxes, a linear model adjusts the bounding box (a rectangle that marks an object's location), and non-max suppression eliminates duplicate detections."
  },
  {
    "id": "3.1.16",
    "section_major": 3,
    "section_minor": 1,
    "original": "Each stage of this complex pipeline must be precisely tuned independently and the resulting system is very slow, taking more than 40 seconds per image at test time [14].",
    "simplified": "Each stage of this complex pipeline must be precisely tuned independently and the resulting system is very slow, taking more than 40 seconds per image at test time [14]."
  },
  {
    "id": "3.1.17",
    "section_major": 3,
    "section_minor": 1,
    "original": "YOLO shares some similarities with R-CNN.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) shares some similarities with R-CNN (convolutional neural network, a deep learning model good at images)."
  },
  {
    "id": "3.1.18",
    "section_major": 3,
    "section_minor": 1,
    "original": "Each grid cell proposes potential bounding boxes and scores those boxes using convolutional features.",
    "simplified": "Each grid cell proposes potential bounding box (a rectangle that marks an object's location) and scores those boxes using convolutional features."
  },
  {
    "id": "3.1.19",
    "section_major": 3,
    "section_minor": 1,
    "original": "However, our system puts spatial constraints on the grid cell proposals which helps mitigate multiple detections of the same object.",
    "simplified": "However, our system puts spatial constraints on the grid cell proposals which helps mitigate multiple detections of the same object. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.20",
    "section_major": 3,
    "section_minor": 1,
    "original": "Our system also proposes far fewer bounding boxes, only 98 per image compared to about 2000 from Selective Search.",
    "simplified": "Our system also proposes far fewer bounding box (a rectangle that marks an object's location), only 98 per image compared to about 2000 from Selective Search."
  },
  {
    "id": "3.1.21",
    "section_major": 3,
    "section_minor": 1,
    "original": "Finally, our system combines these individual components into a single, jointly optimized model.",
    "simplified": "Finally, our system combines these individual components into a single, jointly optimized model. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.22",
    "section_major": 3,
    "section_minor": 1,
    "original": "Other Fast Detectors Fast and Faster R-CNN focus on speeding up the R-CNN framework by sharing computation and using neural networks to propose regions instead of Selective Search [14] [28].",
    "simplified": "Other Fast Detectors Fast and Faster R-CNN (convolutional neural network, a deep learning model good at images) focus on speeding up the R-CNN (convolutional neural network, a deep learning model good at images) framework by sharing computation and using neural networks to propose regions instead of Selective Search [14] [28]."
  },
  {
    "id": "3.1.23",
    "section_major": 3,
    "section_minor": 1,
    "original": "While they offer speed and accuracy improvements over R-CNN, both still fall short of real-time performance.",
    "simplified": "While they offer speed and accuracy improvements over R-CNN (convolutional neural network, a deep learning model good at images), both still fall short of real-time performance."
  },
  {
    "id": "3.1.24",
    "section_major": 3,
    "section_minor": 1,
    "original": "Many research efforts focus on speeding up the DPM pipeline [31] [38] [5].",
    "simplified": "Many research efforts focus on speeding up the DPM pipeline [31] [38] [5]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.25",
    "section_major": 3,
    "section_minor": 1,
    "original": "They speed up HOG computation, use cascades, and push computation to GPUs.",
    "simplified": "They speed up HOG computation, use cascades, and push computation to GPUs. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.26",
    "section_major": 3,
    "section_minor": 1,
    "original": "However, only 30Hz DPM [31] actually runs in real-time.",
    "simplified": "However, only 30Hz DPM [31] actually runs in real-time. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.27",
    "section_major": 3,
    "section_minor": 1,
    "original": "Instead of trying to optimize individual components of a large detection pipeline, YOLO throws out the pipeline entirely and is fast by design.",
    "simplified": "Instead of trying to optimize individual components of a large detection pipeline, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) throws out the pipeline entirely and is fast by design."
  },
  {
    "id": "3.1.28",
    "section_major": 3,
    "section_minor": 1,
    "original": "Detectors for single classes like faces or people can be highly optimized since they have to deal with much less variation [37].",
    "simplified": "Detectors for single classes like faces or people can be highly optimized since they have to deal with much less variation [37]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.29",
    "section_major": 3,
    "section_minor": 1,
    "original": "YOLO is a general purpose detector that learns to detect a variety of objects simultaneously.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is a general purpose detector that learns to detect a variety of objects simultaneously."
  },
  {
    "id": "3.1.30",
    "section_major": 3,
    "section_minor": 1,
    "original": "Deep MultiBox.",
    "simplified": "Deep MultiBox. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.31",
    "section_major": 3,
    "section_minor": 1,
    "original": "Unlike R-CNN, Szegedy et al. train a convolutional neural network to predict regions of interest [8] instead of using Selective Search.",
    "simplified": "Unlike R-CNN (convolutional neural network, a deep learning model good at images), Szegedy et al. train a convolutional neural network to predict regions of interest [8] instead of using Selective Search."
  },
  {
    "id": "3.1.32",
    "section_major": 3,
    "section_minor": 1,
    "original": "MultiBox can also perform single object detection by replacing the confidence prediction with a single class prediction.",
    "simplified": "MultiBox can also perform single object detection (finding what objects are in an image and drawing boxes around them) by replacing the confidence prediction with a single class prediction."
  },
  {
    "id": "3.1.33",
    "section_major": 3,
    "section_minor": 1,
    "original": "However, MultiBox cannot perform general object detection and is still just a piece in a larger detection pipeline, requiring further image patch classification.",
    "simplified": "However, MultiBox cannot perform general object detection (finding what objects are in an image and drawing boxes around them) and is still just a piece in a larger detection pipeline, requiring further image patch classification."
  },
  {
    "id": "3.1.34",
    "section_major": 3,
    "section_minor": 1,
    "original": "Both YOLO and MultiBox use a convolutional network to predict bounding boxes in an image but YOLO is a complete detection system.",
    "simplified": "Both YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) and MultiBox use a convolutional network to predict bounding box (a rectangle that marks an object's location) in an image but YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is a complete detection system."
  },
  {
    "id": "3.1.35",
    "section_major": 3,
    "section_minor": 1,
    "original": "OverFeat.",
    "simplified": "OverFeat. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.36",
    "section_major": 3,
    "section_minor": 1,
    "original": "Sermanet et al. train a convolutional neural network to perform localization and adapt that localizer to perform detection [32].",
    "simplified": "Sermanet et al. train a convolutional neural network to perform localization and adapt that localizer to perform detection [32]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.37",
    "section_major": 3,
    "section_minor": 1,
    "original": "OverFeat efficiently performs sliding window detection but it is still a disjoint system.",
    "simplified": "OverFeat efficiently performs sliding window detection but it is still a disjoint system. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.38",
    "section_major": 3,
    "section_minor": 1,
    "original": "OverFeat optimizes for localization, not detection performance.",
    "simplified": "OverFeat optimizes for localization, not detection performance. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.39",
    "section_major": 3,
    "section_minor": 1,
    "original": "Like DPM, the localizer only sees local information when making a prediction.",
    "simplified": "Like DPM, the localizer only sees local information when making a prediction. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.40",
    "section_major": 3,
    "section_minor": 1,
    "original": "OverFeat cannot reason about global context and thus requires significant post-processing to produce coherent detections.",
    "simplified": "OverFeat cannot reason about global context and thus requires significant post-processing to produce coherent detections. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.41",
    "section_major": 3,
    "section_minor": 1,
    "original": "MultiGrasp.",
    "simplified": "MultiGrasp. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.42",
    "section_major": 3,
    "section_minor": 1,
    "original": "Our work is similar in design to work on grasp detection by Redmon et al [27].",
    "simplified": "Our work is similar in design to work on grasp detection by Redmon et al [27]. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.43",
    "section_major": 3,
    "section_minor": 1,
    "original": "Our grid approach to bounding box prediction is based on the MultiGrasp system for regression to grasps.",
    "simplified": "Our grid approach to bounding box (a rectangle that marks an object's location) prediction is based on the MultiGrasp system for regression to grasps."
  },
  {
    "id": "3.1.44",
    "section_major": 3,
    "section_minor": 1,
    "original": "However, grasp detection is a much simpler task than object detection.",
    "simplified": "However, grasp detection is a much simpler task than object detection (finding what objects are in an image and drawing boxes around them). In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.45",
    "section_major": 3,
    "section_minor": 1,
    "original": "MultiGrasp only needs to predict a single graspable region for an image containing one object.",
    "simplified": "MultiGrasp only needs to predict a single graspable region for an image containing one object. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "3.1.46",
    "section_major": 3,
    "section_minor": 1,
    "original": "It doesn’t have to estimate the size, location, or boundaries of the object or predict it’s class, only find a region suitable for grasping.",
    "simplified": "It doesn’t have to estimate the size, location, or boundaries of the object or predict it’s class, only find a region suitable for grasping."
  },
  {
    "id": "3.1.47",
    "section_major": 3,
    "section_minor": 1,
    "original": "YOLO predicts both bounding boxes and class probabilities for multiple objects of multiple classes in an image.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) predicts both bounding box (a rectangle that marks an object's location) and class probabilities for multiple objects of multiple classes in an image."
  },
  {
    "id": "4.1.1",
    "section_major": 4,
    "section_minor": 1,
    "original": "First we compare YOLO with other real-time detection systems on PASCAL VOC 2007.",
    "simplified": "First we compare YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) with other real-time detection systems on PASCAL VOC 2007."
  },
  {
    "id": "4.1.2",
    "section_major": 4,
    "section_minor": 1,
    "original": "To understand the differences between YOLO and R-CNN variants we explore the errors on VOC 2007 made by YOLO and Fast R-CNN, one of the highest performing versions of R-CNN [14].",
    "simplified": "To understand the differences between YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) and R-CNN (convolutional neural network, a deep learning model good at images) variants we explore the errors on VOC 2007 made by YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) and Fast R-CNN (convolutional neural network, a deep learning model good at images), one of the highest performing versions of R-CNN (convolutional neural network, a deep learning model good at images) [14]."
  },
  {
    "id": "4.1.3",
    "section_major": 4,
    "section_minor": 1,
    "original": "Based on the different error profiles we show that YOLO can be used to rescore Fast R-CNN detections and reduce the errors from background false positives, giving a significant performance boost.",
    "simplified": "Based on the different error profiles we show that YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) can be used to rescore Fast R-CNN (convolutional neural network, a deep learning model good at images) detections and reduce the errors from background false positives, giving a significant performance boost."
  },
  {
    "id": "4.1.4",
    "section_major": 4,
    "section_minor": 1,
    "original": "We also present VOC 2012 results and compare mAP to current state-of-the-art methods.",
    "simplified": "We also present VOC 2012 results and compare mAP (mean average precision, a common accuracy score for detection, higher is better) to current state-of-the-art methods."
  },
  {
    "id": "4.1.5",
    "section_major": 4,
    "section_minor": 1,
    "original": "Finally, we show that YOLO generalizes to new domains better than other detectors on two artwork datasets.",
    "simplified": "Finally, we show that YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) generalizes to new domains better than other detectors on two artwork datasets."
  },
  {
    "id": "4.2.1",
    "section_major": 4,
    "section_minor": 2,
    "original": "Many research efforts in object detection focus on making standard detection pipelines fast. [5] [38] [31] [14] [17] [28] However, only Sadeghi et al. actually produce a detection system that runs in real-time (30 frames per second or better) [31].",
    "simplified": "Many research efforts in object detection (finding what objects are in an image and drawing boxes around them) focus on making standard detection pipelines fast. [5] [38] [31] [14] [17] [28] However, only Sadeghi et al. actually produce a detection system that runs in real-time (30 frames per second or better) [31]."
  },
  {
    "id": "4.2.2",
    "section_major": 4,
    "section_minor": 2,
    "original": "We compare YOLO to their GPU implementation of DPM which runs either at 30Hz or 100Hz.",
    "simplified": "We compare YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) to their GPU implementation of DPM which runs either at 30Hz or 100Hz."
  },
  {
    "id": "4.2.3",
    "section_major": 4,
    "section_minor": 2,
    "original": "While the other efforts don’t reach the real-time milestone we also compare their relative mAP and speed to examine the accuracy-performance tradeoffs available in object detection systems.",
    "simplified": "While the other efforts don’t reach the real-time milestone we also compare their relative mAP (mean average precision, a common accuracy score for detection, higher is better) and speed to examine the accuracy-performance tradeoffs available in object detection (finding what objects are in an image and drawing boxes around them) systems."
  },
  {
    "id": "4.2.4",
    "section_major": 4,
    "section_minor": 2,
    "original": "Fast YOLO is the fastest object detection method on PASCAL; as far as we know, it is the fastest extant object detector.",
    "simplified": "Fast YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is the fastest object detection (finding what objects are in an image and drawing boxes around them) method on PASCAL; as far as we know, it is the fastest extant object detector."
  },
  {
    "id": "4.2.5",
    "section_major": 4,
    "section_minor": 2,
    "original": "With 52.7% mAP, it is more than twice as accurate as prior work on real-time detection.",
    "simplified": "With 52.7% mAP (mean average precision, a common accuracy score for detection, higher is better), it is more than twice as accurate as prior work on real-time detection."
  },
  {
    "id": "4.2.6",
    "section_major": 4,
    "section_minor": 2,
    "original": "YOLO pushes mAP to 63.4% while still maintaining real-time performance.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) pushes mAP (mean average precision, a common accuracy score for detection, higher is better) to 63.4% while still maintaining real-time performance."
  },
  {
    "id": "4.2.7",
    "section_major": 4,
    "section_minor": 2,
    "original": "We also train YOLO using VGG-16.",
    "simplified": "We also train YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) using VGG-16. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.2.8",
    "section_major": 4,
    "section_minor": 2,
    "original": "This model is more accurate but also significantly slower than YOLO.",
    "simplified": "This model is more accurate but also significantly slower than YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects)."
  },
  {
    "id": "4.2.9",
    "section_major": 4,
    "section_minor": 2,
    "original": "It is useful for comparison to other detection systems that rely on VGG-16 but since it is slower than real-time the rest of the paper focuses on our faster models.",
    "simplified": "It is useful for comparison to other detection systems that rely on VGG-16 but since it is slower than real-time the rest of the paper focuses on our faster models."
  },
  {
    "id": "4.2.10",
    "section_major": 4,
    "section_minor": 2,
    "original": "Fastest DPM effectively speeds up DPM without sacrificing much mAP but it still misses real-time performance by a factor of 2 [38].",
    "simplified": "Fastest DPM effectively speeds up DPM without sacrificing much mAP (mean average precision, a common accuracy score for detection, higher is better) but it still misses real-time performance by a factor of 2 [38]."
  },
  {
    "id": "4.2.11",
    "section_major": 4,
    "section_minor": 2,
    "original": "It also is limited by DPM’s relatively low accuracy on detection compared to neural network approaches.",
    "simplified": "It also is limited by DPM’s relatively low accuracy on detection compared to neural network approaches. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.2.12",
    "section_major": 4,
    "section_minor": 2,
    "original": "R-CNN minus R replaces Selective Search with static bounding box proposals [20].",
    "simplified": "R-CNN (convolutional neural network, a deep learning model good at images) minus R replaces Selective Search with static bounding box (a rectangle that marks an object's location) proposals [20]."
  },
  {
    "id": "4.2.13",
    "section_major": 4,
    "section_minor": 2,
    "original": "While it is much faster than Real-Time Detectors Train mAP FPS 100Hz DPM [31] 2007 16.0 100 30Hz DPM [31] 2007 26.1 30 Fast YOLO 2007+2012 52.7 155 Less Than Real-Time Fastest DPM [38] 2007 30.4 15 R-CNN Minus R [20] 2007 53.5 6 Fast R-CNN [14] 2007+2012 70.0 0.5 Faster R-CNN VGG-16[28] 2007+2012 73.2 7 Faster R-CNN ZF [28] 2007+2012 62.1 18 YOLO VGG-16 2007+2012 66.4 21 the fastest detector on record for PASCAL VOC detection and is still twice as accurate as any other real-time detector.",
    "simplified": "While it is much faster than Real-Time Detectors Train mAP (mean average precision, a common accuracy score for detection, higher is better) FPS 100Hz DPM [31] 2007 16.0 100 30Hz DPM [31] 2007 26.1 30 Fast YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) 2007+2012 52.7 155 Less Than Real-Time Fastest DPM [38] 2007 30.4 15 R-CNN (convolutional neural network, a deep learning model good at images) Minus R [20] 2007 53.5 6 Fast R-CNN (convolutional neural network, a deep learning model good at images) [14] 2007+2012 70.0 0.5 Faster R-CNN (convolutional neural network, a deep learning model good at images) VGG-16[28] 2007+2012 73.2 7 Faster R-CNN (convolutional neural network, a deep learning model good at images) ZF [28] 2007+2012 62.1 18 YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) VGG-16 2007+2012 66.4 21 the fastest detector on record for PASCAL VOC detection and is still twice as accurate as any other real-time detector."
  },
  {
    "id": "4.2.14",
    "section_major": 4,
    "section_minor": 2,
    "original": "YOLO is 10 mAP more accurate than the fast version while still well above real-time in speed.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is 10 mAP (mean average precision, a common accuracy score for detection, higher is better) more accurate than the fast version while still well above real-time in speed."
  },
  {
    "id": "4.2.15",
    "section_major": 4,
    "section_minor": 2,
    "original": "R-CNN, it still falls short of real-time and takes a significant accuracy hit from not having good proposals.",
    "simplified": "R-CNN (convolutional neural network, a deep learning model good at images), it still falls short of real-time and takes a significant accuracy hit from not having good proposals."
  },
  {
    "id": "4.2.16",
    "section_major": 4,
    "section_minor": 2,
    "original": "Fast R-CNN speeds up the classification stage of R-CNN but it still relies on selective search which can take around 2 seconds per image to generate bounding box proposals.",
    "simplified": "Fast R-CNN (convolutional neural network, a deep learning model good at images) speeds up the classification stage of R-CNN (convolutional neural network, a deep learning model good at images) but it still relies on selective search which can take around 2 seconds per image to generate bounding box (a rectangle that marks an object's location) proposals."
  },
  {
    "id": "4.2.17",
    "section_major": 4,
    "section_minor": 2,
    "original": "Thus it has high mAP but at 0.5 fps it is still far from realtime.",
    "simplified": "Thus it has high mAP (mean average precision, a common accuracy score for detection, higher is better) but at 0.5 fps it is still far from realtime."
  },
  {
    "id": "4.2.18",
    "section_major": 4,
    "section_minor": 2,
    "original": "The recent Faster R-CNN replaces selective search with a neural network to propose bounding boxes, similar to Szegedy et al. [8] In our tests, their most accurate model achieves 7 fps while a smaller, less accurate one runs at 18 fps.",
    "simplified": "The recent Faster R-CNN (convolutional neural network, a deep learning model good at images) replaces selective search with a neural network to propose bounding box (a rectangle that marks an object's location), similar to Szegedy et al. [8] In our tests, their most accurate model achieves 7 fps while a smaller, less accurate one runs at 18 fps."
  },
  {
    "id": "4.2.19",
    "section_major": 4,
    "section_minor": 2,
    "original": "The VGG-16 version of Faster R-CNN is 10 mAP higher but is also 6 times slower than YOLO.",
    "simplified": "The VGG-16 version of Faster R-CNN (convolutional neural network, a deep learning model good at images) is 10 mAP (mean average precision, a common accuracy score for detection, higher is better) higher but is also 6 times slower than YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects)."
  },
  {
    "id": "4.2.20",
    "section_major": 4,
    "section_minor": 2,
    "original": "The ZeilerFergus Faster R-CNN is only 2.5 times slower than YOLO but is also less accurate.",
    "simplified": "The ZeilerFergus Faster R-CNN (convolutional neural network, a deep learning model good at images) is only 2.5 times slower than YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) but is also less accurate."
  },
  {
    "id": "4.3.1",
    "section_major": 4,
    "section_minor": 3,
    "original": "To further examine the differences between YOLO and state-of-the-art detectors, we look at a detailed breakdown of results on VOC 2007.",
    "simplified": "To further examine the differences between YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) and state-of-the-art detectors, we look at a detailed breakdown of results on VOC 2007."
  },
  {
    "id": "4.3.2",
    "section_major": 4,
    "section_minor": 3,
    "original": "We compare YOLO to Fast RCNN since Fast R-CNN is one of the highest performing detectors on PASCAL and it’s detections are publicly available.",
    "simplified": "We compare YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) to Fast RCNN since Fast R-CNN (convolutional neural network, a deep learning model good at images) is one of the highest performing detectors on PASCAL and it’s detections are publicly available."
  },
  {
    "id": "4.3.3",
    "section_major": 4,
    "section_minor": 3,
    "original": "We use the methodology and tools of Hoiem et al. [19] For each category at test time we look at the top N predictions for that category.",
    "simplified": "We use the methodology and tools of Hoiem et al. [19] For each category at test time we look at the top N predictions for that category. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.3.4",
    "section_major": 4,
    "section_minor": 3,
    "original": "Each prediction is either correct or it is classified based on the type of error: • Correct: correct class and IOU > .5 • Localization: correct class, .1 < IOU < .5 • Similar: class is similar, IOU > .1 Correct: 71.6% Correct: 65.5% Other: 1.9% Background: 13.6% Other: 4.0% Background: 4.75% Fast R-CNN YOLO charts show the percentage of localization and background errors in the top N detections for various categories (N = # objects in that category). • Other: class is wrong, IOU > .1 • Background: IOU < .1 for any object YOLO struggles to localize objects correctly.",
    "simplified": "Each prediction is either correct or it is classified based on the type of error: • Correct: correct class and IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap) > .5 • Localization: correct class, .1 < IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap) < .5 • Similar: class is similar, IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap) > .1 Correct: 71.6% Correct: 65.5% Other: 1.9% Background: 13.6% Other: 4.0% Background: 4.75% Fast R-CNN (convolutional neural network, a deep learning model good at images) YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) charts show the percentage of localization and background errors in the top N detections for various categories (N = # objects in that category). • Other: class is wrong, IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap) > .1 • Background: IoU (Intersection over Union, how much the predicted box overlaps the true box; 1.0 is perfect overlap) < .1 for any object YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) struggles to localize objects correctly."
  },
  {
    "id": "4.3.5",
    "section_major": 4,
    "section_minor": 3,
    "original": "Localization errors account for more of YOLO’s errors than all other sources combined.",
    "simplified": "Localization errors account for more of YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects)’s errors than all other sources combined."
  },
  {
    "id": "4.3.6",
    "section_major": 4,
    "section_minor": 3,
    "original": "Fast R-CNN makes much fewer localization errors but far more background errors. 13.6% of it’s top detections are false positives that don’t contain any objects.",
    "simplified": "Fast R-CNN (convolutional neural network, a deep learning model good at images) makes much fewer localization errors but far more background errors. 13.6% of it’s top detections are false positives that don’t contain any objects."
  },
  {
    "id": "4.3.7",
    "section_major": 4,
    "section_minor": 3,
    "original": "Fast R-CNN is almost 3x more likely to predict background detections than YOLO.",
    "simplified": "Fast R-CNN (convolutional neural network, a deep learning model good at images) is almost 3x more likely to predict background detections than YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects)."
  },
  {
    "id": "4.4.1",
    "section_major": 4,
    "section_minor": 4,
    "original": "YOLO makes far fewer background mistakes than Fast R-CNN.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) makes far fewer background mistakes than Fast R-CNN (convolutional neural network, a deep learning model good at images)."
  },
  {
    "id": "4.4.2",
    "section_major": 4,
    "section_minor": 4,
    "original": "By using YOLO to eliminate background detections from Fast R-CNN we get a significant boost in performance.",
    "simplified": "By using YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) to eliminate background detections from Fast R-CNN (convolutional neural network, a deep learning model good at images) we get a significant boost in performance."
  },
  {
    "id": "4.4.3",
    "section_major": 4,
    "section_minor": 4,
    "original": "For every bounding box that R-CNN predicts we check to see if YOLO predicts a similar box.",
    "simplified": "For every bounding box (a rectangle that marks an object's location) that R-CNN (convolutional neural network, a deep learning model good at images) predicts we check to see if YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) predicts a similar box."
  },
  {
    "id": "4.4.4",
    "section_major": 4,
    "section_minor": 4,
    "original": "If it does, we give that prediction a boost based on the probability predicted by YOLO and the overlap between the two boxes.",
    "simplified": "If it does, we give that prediction a boost based on the probability predicted by YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) and the overlap between the two boxes."
  },
  {
    "id": "4.4.5",
    "section_major": 4,
    "section_minor": 4,
    "original": "The best Fast R-CNN model achieves a mAP of 71.8% on the VOC 2007 test set.",
    "simplified": "The best Fast R-CNN (convolutional neural network, a deep learning model good at images) model achieves a mAP (mean average precision, a common accuracy score for detection, higher is better) of 71.8% on the VOC 2007 test set."
  },
  {
    "id": "4.4.6",
    "section_major": 4,
    "section_minor": 4,
    "original": "When combined with YOLO, its mAP Combined Gain Fast R-CNN 71.8 - - Fast R-CNN (2007 data) 66.9 72.4 .6 Fast R-CNN (VGG-M) 59.2 72.4 .6 Fast R-CNN (CaffeNet) 57.1 72.1 .3 examine the effect of combining various models with the best version of Fast R-CNN.",
    "simplified": "When combined with YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects), its mAP (mean average precision, a common accuracy score for detection, higher is better) Combined Gain Fast R-CNN (convolutional neural network, a deep learning model good at images) 71.8 - - Fast R-CNN (convolutional neural network, a deep learning model good at images) (2007 data) 66.9 72.4 .6 Fast R-CNN (convolutional neural network, a deep learning model good at images) (VGG-M) 59.2 72.4 .6 Fast R-CNN (convolutional neural network, a deep learning model good at images) (CaffeNet) 57.1 72.1 .3 examine the effect of combining various models with the best version of Fast R-CNN (convolutional neural network, a deep learning model good at images)."
  },
  {
    "id": "4.4.7",
    "section_major": 4,
    "section_minor": 4,
    "original": "Other versions of Fast R-CNN provide only a small benefit while YOLO provides a significant performance boost.",
    "simplified": "Other versions of Fast R-CNN (convolutional neural network, a deep learning model good at images) provide only a small benefit while YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) provides a significant performance boost."
  },
  {
    "id": "4.4.8",
    "section_major": 4,
    "section_minor": 4,
    "original": "VOC 2012 test mAP aero bike bird boat bottle bus car cat chair cow table dog horse mbike person plant sheep sofa train tv MR CNN MORE DATA [11] 73.9 85.5 82.9 76.6 57.8 62.7 79.4 77.2 86.6 55.0 79.1 62.2 87.0 83.4 84.7 78.9 45.3 73.4 65.8 80.3 74.0 HyperNet VGG 71.4 84.2 78.5 73.6 55.6 53.7 78.7 79.8 87.7 49.6 74.9 52.1 86.0 81.7 83.3 81.8 48.6 73.5 59.4 79.9 65.7 HyperNet SP 71.3 84.1 78.3 73.3 55.5 53.6 78.6 79.6 87.5 49.5 74.9 52.1 85.6 81.6 83.2 81.6 48.4 73.2 59.3 79.7 65.6 Fast R-CNN + YOLO 70.7 83.4 78.5 73.5 55.8 43.4 79.1 73.1 89.4 49.4 75.5 57.0 87.5 80.9 81.0 74.7 41.8 71.5 68.5 82.1 67.2 MR CNN S CNN [11] 70.7 85.0 79.6 71.5 55.3 57.7 76.0 73.9 84.6 50.5 74.3 61.7 85.5 79.9 81.7 76.4 41.0 69.0 61.2 77.7 72.1 Faster R-CNN [28] 70.4 84.9 79.8 74.3 53.9 49.8 77.5 75.9 88.5 45.6 77.1 55.3 86.9 81.7 80.9 79.6 40.1 72.6 60.9 81.2 61.5 DEEP ENS COCO 70.1 84.0 79.4 71.6 51.9 51.1 74.1 72.1 88.6 48.3 73.4 57.8 86.1 80.0 80.7 70.4 46.6 69.6 68.8 75.9 71.4 Fast R-CNN [14] 68.4 82.3 78.4 70.8 52.3 38.7 77.8 71.6 89.3 44.2 73.0 55.0 87.5 80.5 80.8 72.0 35.1 68.3 65.7 80.4 64.2 UMICH FGS STRUCT 66.4 82.9 76.1 64.1 44.6 49.4 70.3 71.2 84.6 42.7 68.6 55.8 82.7 77.1 79.9 68.7 41.4 69.0 60.0 72.0 66.2 NUS NIN C2000 [7] 63.8 80.2 73.8 61.9 43.7 43.0 70.3 67.6 80.7 41.9 69.7 51.7 78.2 75.2 76.9 65.1 38.6 68.3 58.0 68.7 63.3 BabyLearning [7] 63.2 78.0 74.2 61.3 45.7 42.7 68.2 66.8 80.2 40.6 70.0 49.8 79.0 74.5 77.9 64.0 35.3 67.9 55.7 68.7 62.6 NUS NIN 62.4 77.9 73.1 62.6 39.5 43.3 69.1 66.4 78.9 39.1 68.1 50.0 77.2 71.3 76.1 64.7 38.4 66.9 56.2 66.9 62.7 R-CNN VGG BB [13] 62.4 79.6 72.7 61.9 41.2 41.9 65.9 66.4 84.6 38.5 67.2 46.7 82.0 74.8 76.0 65.2 35.6 65.4 54.2 67.4 60.3 R-CNN VGG [13] 59.2 76.8 70.9 56.6 37.5 36.9 62.9 63.6 81.1 35.7 64.3 43.9 80.4 71.6 74.0 60.0 30.8 63.4 52.0 63.5 58.7 Feature Edit [33] 56.3 74.6 69.1 54.4 39.1 33.1 65.2 62.7 69.7 30.8 56.0 44.6 70.0 64.4 71.1 60.2 33.3 61.3 46.4 61.7 57.8 R-CNN BB [13] 53.3 71.8 65.8 52.0 34.1 32.6 59.6 60.0 69.8 27.6 52.0 41.7 69.6 61.3 68.3 57.8 29.6 57.8 40.9 59.3 54.1 November 6th, 2015.",
    "simplified": "VOC 2012 test mAP (mean average precision, a common accuracy score for detection, higher is better) aero bike bird boat bottle bus car cat chair cow table dog horse mbike person plant sheep sofa train tv MR CNN (convolutional neural network, a deep learning model good at images) MORE DATA [11] 73.9 85.5 82.9 76.6 57.8 62.7 79.4 77.2 86.6 55.0 79.1 62.2 87.0 83.4 84.7 78.9 45.3 73.4 65.8 80.3 74.0 HyperNet VGG 71.4 84.2 78.5 73.6 55.6 53.7 78.7 79.8 87.7 49.6 74.9 52.1 86.0 81.7 83.3 81.8 48.6 73.5 59.4 79.9 65.7 HyperNet SP 71.3 84.1 78.3 73.3 55.5 53.6 78.6 79.6 87.5 49.5 74.9 52.1 85.6 81.6 83.2 81.6 48.4 73.2 59.3 79.7 65.6 Fast R-CNN (convolutional neural network, a deep learning model good at images) + YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) 70.7 83.4 78.5 73.5 55.8 43.4 79.1 73.1 89.4 49.4 75.5 57.0 87.5 80.9 81.0 74.7 41.8 71.5 68.5 82.1 67.2 MR CNN (convolutional neural network, a deep learning model good at images) S CNN (convolutional neural network, a deep learning model good at images) [11] 70.7 85.0 79.6 71.5 55.3 57.7 76.0 73.9 84.6 50.5 74.3 61.7 85.5 79.9 81.7 76.4 41.0 69.0 61.2 77.7 72.1 Faster R-CNN (convolutional neural network, a deep learning model good at images) [28] 70.4 84.9 79.8 74.3 53.9 49.8 77.5 75.9 88.5 45.6 77.1 55.3 86.9 81.7 80.9 79.6 40.1 72.6 60.9 81.2 61.5 DEEP ENS COCO 70.1 84.0 79.4 71.6 51.9 51.1 74.1 72.1 88.6 48.3 73.4 57.8 86.1 80.0 80.7 70.4 46.6 69.6 68.8 75.9 71.4 Fast R-CNN (convolutional neural network, a deep learning model good at images) [14] 68.4 82.3 78.4 70.8 52.3 38.7 77.8 71.6 89.3 44.2 73.0 55.0 87.5 80.5 80.8 72.0 35.1 68.3 65.7 80.4 64.2 UMICH FGS STRUCT 66.4 82.9 76.1 64.1 44.6 49.4 70.3 71.2 84.6 42.7 68.6 55.8 82.7 77.1 79.9 68.7 41.4 69.0 60.0 72.0 66.2 NUS NIN C2000 [7] 63.8 80.2 73.8 61.9 43.7 43.0 70.3 67.6 80.7 41.9 69.7 51.7 78.2 75.2 76.9 65.1 38.6 68.3 58.0 68.7 63.3 BabyLearning [7] 63.2 78.0 74.2 61.3 45.7 42.7 68.2 66.8 80.2 40.6 70.0 49.8 79.0 74.5 77.9 64.0 35.3 67.9 55.7 68.7 62.6 NUS NIN 62.4 77.9 73.1 62.6 39.5 43.3 69.1 66.4 78.9 39.1 68.1 50.0 77.2 71.3 76.1 64.7 38.4 66.9 56.2 66.9 62.7 R-CNN (convolutional neural network, a deep learning model good at images) VGG BB [13] 62.4 79.6 72.7 61.9 41.2 41.9 65.9 66.4 84.6 38.5 67.2 46.7 82.0 74.8 76.0 65.2 35.6 65.4 54.2 67.4 60.3 R-CNN (convolutional neural network, a deep learning model good at images) VGG [13] 59.2 76.8 70.9 56.6 37.5 36.9 62.9 63.6 81.1 35.7 64.3 43.9 80.4 71.6 74.0 60.0 30.8 63.4 52.0 63.5 58.7 Feature Edit [33] 56.3 74.6 69.1 54.4 39.1 33.1 65.2 62.7 69.7 30.8 56.0 44.6 70.0 64.4 71.1 60.2 33.3 61.3 46.4 61.7 57.8 R-CNN (convolutional neural network, a deep learning model good at images) BB [13] 53.3 71.8 65.8 52.0 34.1 32.6 59.6 60.0 69.8 27.6 52.0 41.7 69.6 61.3 68.3 57.8 29.6 57.8 40.9 59.3 54.1 November 6th, 2015."
  },
  {
    "id": "4.4.9",
    "section_major": 4,
    "section_minor": 4,
    "original": "Mean average precision and per-class average precision are shown for a variety of detection methods.",
    "simplified": "Mean average precision and per-class average precision are shown for a variety of detection methods. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.4.10",
    "section_major": 4,
    "section_minor": 4,
    "original": "YOLO is the only real-time detector.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is the only real-time detector. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.4.11",
    "section_major": 4,
    "section_minor": 4,
    "original": "Fast R-CNN + YOLO is the forth highest scoring method, with a 2.3% boost over Fast R-CNN. mAP increases by 3.2% to 75.0%.",
    "simplified": "Fast R-CNN (convolutional neural network, a deep learning model good at images) + YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is the forth highest scoring method, with a 2.3% boost over Fast R-CNN (convolutional neural network, a deep learning model good at images). mAP (mean average precision, a common accuracy score for detection, higher is better) increases by 3.2% to 75.0%."
  },
  {
    "id": "4.4.12",
    "section_major": 4,
    "section_minor": 4,
    "original": "We also tried combining the top Fast R-CNN model with several other versions of Fast R-CNN.",
    "simplified": "We also tried combining the top Fast R-CNN (convolutional neural network, a deep learning model good at images) model with several other versions of Fast R-CNN (convolutional neural network, a deep learning model good at images)."
  },
  {
    "id": "4.4.13",
    "section_major": 4,
    "section_minor": 4,
    "original": "Those ensembles produced small increases in mAP between .3 and .6%, see Table 2 for details.",
    "simplified": "Those ensembles produced small increases in mAP (mean average precision, a common accuracy score for detection, higher is better) between .3 and .6%, see Table 2 for details."
  },
  {
    "id": "4.4.14",
    "section_major": 4,
    "section_minor": 4,
    "original": "The boost from YOLO is not simply a byproduct of model ensembling since there is little benefit from combining different versions of Fast R-CNN.",
    "simplified": "The boost from YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is not simply a byproduct of model ensembling since there is little benefit from combining different versions of Fast R-CNN (convolutional neural network, a deep learning model good at images)."
  },
  {
    "id": "4.4.15",
    "section_major": 4,
    "section_minor": 4,
    "original": "Rather, it is precisely because YOLO makes different kinds of mistakes at test time that it is so effective at boosting Fast R-CNN’s performance.",
    "simplified": "Rather, it is precisely because YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) makes different kinds of mistakes at test time that it is so effective at boosting Fast R-CNN (convolutional neural network, a deep learning model good at images)’s performance."
  },
  {
    "id": "4.4.16",
    "section_major": 4,
    "section_minor": 4,
    "original": "Unfortunately, this combination doesn’t benefit from the speed of YOLO since we run each model seperately and then combine the results.",
    "simplified": "Unfortunately, this combination doesn’t benefit from the speed of YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) since we run each model seperately and then combine the results."
  },
  {
    "id": "4.4.17",
    "section_major": 4,
    "section_minor": 4,
    "original": "However, since YOLO is so fast it doesn’t add any significant computational time compared to Fast R-CNN.",
    "simplified": "However, since YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is so fast it doesn’t add any significant computational time compared to Fast R-CNN (convolutional neural network, a deep learning model good at images)."
  },
  {
    "id": "4.5.1",
    "section_major": 4,
    "section_minor": 5,
    "original": "On the VOC 2012 test set, YOLO scores 57.9% mAP.",
    "simplified": "On the VOC 2012 test set, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) scores 57.9% mAP (mean average precision, a common accuracy score for detection, higher is better)."
  },
  {
    "id": "4.5.2",
    "section_major": 4,
    "section_minor": 5,
    "original": "This is lower than the current state of the art, closer to the original R-CNN using VGG-16, see Table 3.",
    "simplified": "This is lower than the current state of the art, closer to the original R-CNN (convolutional neural network, a deep learning model good at images) using VGG-16, see Table 3."
  },
  {
    "id": "4.5.3",
    "section_major": 4,
    "section_minor": 5,
    "original": "Our system struggles with small objects compared to its closest competitors.",
    "simplified": "Our system struggles with small objects compared to its closest competitors. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.5.4",
    "section_major": 4,
    "section_minor": 5,
    "original": "On categories like bottle, sheep, and tv/monitor YOLO scores 8-10% lower than R-CNN or Feature Edit.",
    "simplified": "On categories like bottle, sheep, and tv/monitor YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) scores 8-10% lower than R-CNN (convolutional neural network, a deep learning model good at images) or Feature Edit."
  },
  {
    "id": "4.5.5",
    "section_major": 4,
    "section_minor": 5,
    "original": "However, on other categories like cat and train YOLO achieves higher performance.",
    "simplified": "However, on other categories like cat and train YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) achieves higher performance."
  },
  {
    "id": "4.5.6",
    "section_major": 4,
    "section_minor": 5,
    "original": "Our combined Fast R-CNN + YOLO model is one of the highest performing detection methods.",
    "simplified": "Our combined Fast R-CNN (convolutional neural network, a deep learning model good at images) + YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) model is one of the highest performing detection methods."
  },
  {
    "id": "4.5.7",
    "section_major": 4,
    "section_minor": 5,
    "original": "Fast R-CNN gets a 2.3% improvement from the combination with YOLO, boosting it 5 spots up on the public leaderboard.",
    "simplified": "Fast R-CNN (convolutional neural network, a deep learning model good at images) gets a 2.3% improvement from the combination with YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects), boosting it 5 spots up on the public leaderboard."
  },
  {
    "id": "4.6.1",
    "section_major": 4,
    "section_minor": 6,
    "original": "Academic datasets for object detection draw the training and testing data from the same distribution.",
    "simplified": "Academic datasets for object detection (finding what objects are in an image and drawing boxes around them) draw the training and testing data from the same distribution."
  },
  {
    "id": "4.6.2",
    "section_major": 4,
    "section_minor": 6,
    "original": "In real-world applications it is hard to predict all possible use cases and the test data can diverge from what the system has seen before [3].",
    "simplified": "In real-world applications it is hard to predict all possible use cases and the test data can diverge from what the system has seen before [3]."
  },
  {
    "id": "4.6.3",
    "section_major": 4,
    "section_minor": 6,
    "original": "We compare YOLO to other detection systems on the Picasso Dataset [12] and the People-Art Dataset [3], two datasets for testing person detection on artwork.",
    "simplified": "We compare YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) to other detection systems on the Picasso Dataset [12] and the People-Art Dataset [3], two datasets for testing person detection on artwork."
  },
  {
    "id": "4.6.4",
    "section_major": 4,
    "section_minor": 6,
    "original": "YOLO and other detection methods.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) and other detection methods. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.6.5",
    "section_major": 4,
    "section_minor": 6,
    "original": "For reference, we give VOC 2007 detection AP on person where all models are trained only on VOC 2007 data.",
    "simplified": "For reference, we give VOC 2007 detection AP on person where all models are trained only on VOC 2007 data. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.6.6",
    "section_major": 4,
    "section_minor": 6,
    "original": "On Picasso models are trained on VOC 2012 while on People-Art they are trained on VOC 2010.",
    "simplified": "On Picasso models are trained on VOC 2012 while on People-Art they are trained on VOC 2010. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.6.7",
    "section_major": 4,
    "section_minor": 6,
    "original": "R-CNN has high AP on VOC 2007.",
    "simplified": "R-CNN (convolutional neural network, a deep learning model good at images) has high AP on VOC 2007. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.6.8",
    "section_major": 4,
    "section_minor": 6,
    "original": "However, R-CNN drops off considerably when applied to artwork.",
    "simplified": "However, R-CNN (convolutional neural network, a deep learning model good at images) drops off considerably when applied to artwork. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.6.9",
    "section_major": 4,
    "section_minor": 6,
    "original": "R-CNN uses Selective Search for bounding box proposals which is tuned for natural images.",
    "simplified": "R-CNN (convolutional neural network, a deep learning model good at images) uses Selective Search for bounding box (a rectangle that marks an object's location) proposals which is tuned for natural images."
  },
  {
    "id": "4.6.10",
    "section_major": 4,
    "section_minor": 6,
    "original": "The classifier step in R-CNN only sees small regions and needs good proposals.",
    "simplified": "The classifier step in R-CNN (convolutional neural network, a deep learning model good at images) only sees small regions and needs good proposals."
  },
  {
    "id": "4.6.11",
    "section_major": 4,
    "section_minor": 6,
    "original": "DPM maintains its AP well when applied to artwork.",
    "simplified": "DPM maintains its AP well when applied to artwork. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.6.12",
    "section_major": 4,
    "section_minor": 6,
    "original": "Prior work theorizes that DPM performs well because it has strong spatial models of the shape and layout of objects.",
    "simplified": "Prior work theorizes that DPM performs well because it has strong spatial models of the shape and layout of objects. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "4.6.13",
    "section_major": 4,
    "section_minor": 6,
    "original": "Though DPM doesn’t degrade as much as R-CNN, it starts from a lower AP.",
    "simplified": "Though DPM doesn’t degrade as much as R-CNN (convolutional neural network, a deep learning model good at images), it starts from a lower AP."
  },
  {
    "id": "4.6.14",
    "section_major": 4,
    "section_minor": 6,
    "original": "YOLO has good performance on VOC 2007 and its AP degrades less than other methods when applied to artwork.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) has good performance on VOC 2007 and its AP degrades less than other methods when applied to artwork."
  },
  {
    "id": "4.6.15",
    "section_major": 4,
    "section_minor": 6,
    "original": "Like DPM, YOLO models the size and shape of objects, as well as relationships between objects and where objects commonly appear.",
    "simplified": "Like DPM, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) models the size and shape of objects, as well as relationships between objects and where objects commonly appear."
  },
  {
    "id": "4.6.16",
    "section_major": 4,
    "section_minor": 6,
    "original": "Artwork and natural images are very different on a pixel level but they are similar in terms of the size and shape of objects, thus YOLO can still predict good bounding boxes and detections.",
    "simplified": "Artwork and natural images are very different on a pixel level but they are similar in terms of the size and shape of objects, thus YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) can still predict good bounding box (a rectangle that marks an object's location) and detections."
  },
  {
    "id": "5.1.1",
    "section_major": 5,
    "section_minor": 1,
    "original": "YOLO is a fast, accurate object detector, making it ideal for computer vision applications.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is a fast, accurate object detector, making it ideal for computer vision applications."
  },
  {
    "id": "5.1.2",
    "section_major": 5,
    "section_minor": 1,
    "original": "We connect YOLO to a webcam and verify that it maintains real-time performance, Poselets RCNN D&T Humans DPM YOLO (a) Picasso Dataset precision-recall curves.",
    "simplified": "We connect YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) to a webcam and verify that it maintains real-time performance, Poselets RCNN D&T Humans DPM YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) (a) Picasso Dataset precision-recall curves."
  },
  {
    "id": "5.1.3",
    "section_major": 5,
    "section_minor": 1,
    "original": "VOC 2007 Picasso People-Art AP AP Best F1 AP Poselets [2] 36.5 17.8 0.271 (b) Quantitative results on the VOC 2007, Picasso, and People-Art Datasets.",
    "simplified": "VOC 2007 Picasso People-Art AP AP Best F1 AP Poselets [2] 36.5 17.8 0.271 (b) Quantitative results on the VOC 2007, Picasso, and People-Art Datasets."
  },
  {
    "id": "5.1.4",
    "section_major": 5,
    "section_minor": 1,
    "original": "The Picasso Dataset evaluates on both AP and best F1 score. does think one person is an airplane. including the time to fetch images from the camera and display the detections.",
    "simplified": "The Picasso Dataset evaluates on both AP and best F1 score. does think one person is an airplane. including the time to fetch images from the camera and display the detections."
  },
  {
    "id": "5.1.5",
    "section_major": 5,
    "section_minor": 1,
    "original": "The resulting system is interactive and engaging.",
    "simplified": "The resulting system is interactive and engaging. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "5.1.6",
    "section_major": 5,
    "section_minor": 1,
    "original": "While YOLO processes images individually, when attached to a webcam it functions like a tracking system, detecting objects as they move around and change in appearance.",
    "simplified": "While YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) processes images individually, when attached to a webcam it functions like a tracking system, detecting objects as they move around and change in appearance."
  },
  {
    "id": "5.1.7",
    "section_major": 5,
    "section_minor": 1,
    "original": "A demo of the system and the source code can be found on our project website: http://pjreddie.com/yolo/.",
    "simplified": "A demo of the system and the source code can be found on our project website: http://pjreddie.com/YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects)/."
  },
  {
    "id": "6.1.1",
    "section_major": 6,
    "section_minor": 1,
    "original": "We introduce YOLO, a unified model for object detection.",
    "simplified": "We introduce YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects), a unified model for object detection (finding what objects are in an image and drawing boxes around them)."
  },
  {
    "id": "6.1.2",
    "section_major": 6,
    "section_minor": 1,
    "original": "Our model is simple to construct and can be trained directly on full images.",
    "simplified": "Our model is simple to construct and can be trained directly on full images. In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  },
  {
    "id": "6.1.3",
    "section_major": 6,
    "section_minor": 1,
    "original": "Unlike classifier-based approaches, YOLO is trained on a loss function that directly corresponds to detection performance and the entire model is trained jointly.",
    "simplified": "Unlike classifier-based approaches, YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is trained on a loss function that directly corresponds to detection performance and the entire model is trained jointly."
  },
  {
    "id": "6.1.4",
    "section_major": 6,
    "section_minor": 1,
    "original": "Fast YOLO is the fastest general-purpose object detector in the literature and YOLO pushes the state-of-the-art in real-time object detection.",
    "simplified": "Fast YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) is the fastest general-purpose object detector in the literature and YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) pushes the state-of-the-art in real-time object detection (finding what objects are in an image and drawing boxes around them)."
  },
  {
    "id": "6.1.5",
    "section_major": 6,
    "section_minor": 1,
    "original": "YOLO also generalizes well to new domains making it ideal for applications that rely on fast, robust object detection.",
    "simplified": "YOLO (short for 'You Only Look Once', a method that looks at the whole image once to detect objects) also generalizes well to new domains making it ideal for applications that rely on fast, robust object detection (finding what objects are in an image and drawing boxes around them)."
  },
  {
    "id": "6.1.6",
    "section_major": 6,
    "section_minor": 1,
    "original": "Acknowledgements: This work is partially supported by ONR N00014-13-1-0720, NSF IIS-133",
    "simplified": "Acknowledgements: This work is partially supported by ONR N00014-13-1-0720, NSF IIS-133 In simple terms, the method keeps steps minimal, uses full-image context, and directly predicts useful numbers (like box positions) and labels together."
  }
]